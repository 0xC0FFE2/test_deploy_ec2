name: Docker Build and Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/test-fortune-app:latest
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # 배포 스크립트 생성
          cat > ~/deploy.sh << 'EOL'
          #!/bin/bash
          # 최신 이미지 가져오기
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/test-fortune-app:latest
          
          # 현재 실행 중인 컨테이너 중지 및 제거
          sudo docker stop test-fortune-app || true
          sudo docker rm test-fortune-app || true
          
          # 새 컨테이너 실행
          sudo docker run -d --name test-fortune-app -p 3000:3000 --restart always ${{ secrets.DOCKERHUB_USERNAME }}/test-fortune-app:latest
          
          # 사용하지 않는 이미지 정리
          sudo docker image prune -f
          EOL
          
          # 스크립트에 실행 권한 부여
          chmod +x ~/deploy.sh
          
          # 스크립트 실행
          ~/deploy.sh